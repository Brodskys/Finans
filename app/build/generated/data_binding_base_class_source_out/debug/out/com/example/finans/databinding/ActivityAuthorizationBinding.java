// Generated by view binder compiler. Do not edit!
package com.example.finans.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.finans.R;
import com.google.android.material.textfield.TextInputEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAuthorizationBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button authUserBtn;

  @NonNull
  public final TextView donthaveanAccount;

  @NonNull
  public final TextInputEditText editTextTextEmailAddress;

  @NonNull
  public final TextInputEditText editTextTextPassword;

  @NonNull
  public final ImageView emailIcon;

  @NonNull
  public final LinearLayout emailLayout;

  @NonNull
  public final TextView emailTxt;

  @NonNull
  public final TextView forgotPassword;

  @NonNull
  public final ImageView imageView1;

  @NonNull
  public final ImageView imageView2;

  @NonNull
  public final ImageView imageView4;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final ImageView passwordIcon;

  @NonNull
  public final LinearLayout passwordLayout;

  @NonNull
  public final TextView passwordTxt;

  @NonNull
  public final TextView signUpButton;

  @NonNull
  public final RelativeLayout socialNetwork;

  @NonNull
  public final TextView textOR;

  private ActivityAuthorizationBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button authUserBtn, @NonNull TextView donthaveanAccount,
      @NonNull TextInputEditText editTextTextEmailAddress,
      @NonNull TextInputEditText editTextTextPassword, @NonNull ImageView emailIcon,
      @NonNull LinearLayout emailLayout, @NonNull TextView emailTxt,
      @NonNull TextView forgotPassword, @NonNull ImageView imageView1,
      @NonNull ImageView imageView2, @NonNull ImageView imageView4,
      @NonNull LinearLayout linearLayout, @NonNull ImageView passwordIcon,
      @NonNull LinearLayout passwordLayout, @NonNull TextView passwordTxt,
      @NonNull TextView signUpButton, @NonNull RelativeLayout socialNetwork,
      @NonNull TextView textOR) {
    this.rootView = rootView;
    this.authUserBtn = authUserBtn;
    this.donthaveanAccount = donthaveanAccount;
    this.editTextTextEmailAddress = editTextTextEmailAddress;
    this.editTextTextPassword = editTextTextPassword;
    this.emailIcon = emailIcon;
    this.emailLayout = emailLayout;
    this.emailTxt = emailTxt;
    this.forgotPassword = forgotPassword;
    this.imageView1 = imageView1;
    this.imageView2 = imageView2;
    this.imageView4 = imageView4;
    this.linearLayout = linearLayout;
    this.passwordIcon = passwordIcon;
    this.passwordLayout = passwordLayout;
    this.passwordTxt = passwordTxt;
    this.signUpButton = signUpButton;
    this.socialNetwork = socialNetwork;
    this.textOR = textOR;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAuthorizationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAuthorizationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_authorization, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAuthorizationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.authUser_btn;
      Button authUserBtn = ViewBindings.findChildViewById(rootView, id);
      if (authUserBtn == null) {
        break missingId;
      }

      id = R.id.donthaveanAccount;
      TextView donthaveanAccount = ViewBindings.findChildViewById(rootView, id);
      if (donthaveanAccount == null) {
        break missingId;
      }

      id = R.id.editTextTextEmailAddress;
      TextInputEditText editTextTextEmailAddress = ViewBindings.findChildViewById(rootView, id);
      if (editTextTextEmailAddress == null) {
        break missingId;
      }

      id = R.id.editTextTextPassword;
      TextInputEditText editTextTextPassword = ViewBindings.findChildViewById(rootView, id);
      if (editTextTextPassword == null) {
        break missingId;
      }

      id = R.id.emailIcon;
      ImageView emailIcon = ViewBindings.findChildViewById(rootView, id);
      if (emailIcon == null) {
        break missingId;
      }

      id = R.id.email_layout;
      LinearLayout emailLayout = ViewBindings.findChildViewById(rootView, id);
      if (emailLayout == null) {
        break missingId;
      }

      id = R.id.email_txt;
      TextView emailTxt = ViewBindings.findChildViewById(rootView, id);
      if (emailTxt == null) {
        break missingId;
      }

      id = R.id.forgot_password;
      TextView forgotPassword = ViewBindings.findChildViewById(rootView, id);
      if (forgotPassword == null) {
        break missingId;
      }

      id = R.id.imageView1;
      ImageView imageView1 = ViewBindings.findChildViewById(rootView, id);
      if (imageView1 == null) {
        break missingId;
      }

      id = R.id.imageView2;
      ImageView imageView2 = ViewBindings.findChildViewById(rootView, id);
      if (imageView2 == null) {
        break missingId;
      }

      id = R.id.imageView4;
      ImageView imageView4 = ViewBindings.findChildViewById(rootView, id);
      if (imageView4 == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.passwordIcon;
      ImageView passwordIcon = ViewBindings.findChildViewById(rootView, id);
      if (passwordIcon == null) {
        break missingId;
      }

      id = R.id.password_layout;
      LinearLayout passwordLayout = ViewBindings.findChildViewById(rootView, id);
      if (passwordLayout == null) {
        break missingId;
      }

      id = R.id.password_txt;
      TextView passwordTxt = ViewBindings.findChildViewById(rootView, id);
      if (passwordTxt == null) {
        break missingId;
      }

      id = R.id.signUpButton;
      TextView signUpButton = ViewBindings.findChildViewById(rootView, id);
      if (signUpButton == null) {
        break missingId;
      }

      id = R.id.social_network;
      RelativeLayout socialNetwork = ViewBindings.findChildViewById(rootView, id);
      if (socialNetwork == null) {
        break missingId;
      }

      id = R.id.textOR;
      TextView textOR = ViewBindings.findChildViewById(rootView, id);
      if (textOR == null) {
        break missingId;
      }

      return new ActivityAuthorizationBinding((ConstraintLayout) rootView, authUserBtn,
          donthaveanAccount, editTextTextEmailAddress, editTextTextPassword, emailIcon, emailLayout,
          emailTxt, forgotPassword, imageView1, imageView2, imageView4, linearLayout, passwordIcon,
          passwordLayout, passwordTxt, signUpButton, socialNetwork, textOR);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
